{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-07-05T18:14:35.253Z",
    "end": "2022-07-05T18:15:52.169Z",
    "duration": 76916,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cc178210-e23d-4a8b-8d0c-e743828120ea",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "713c7148-bd5a-4e36-b35b-9813894988ad",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "5bda870b-1249-46db-a5f4-7644f17415f7",
              "parentUUID": "713c7148-bd5a-4e36-b35b-9813894988ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5bda870b-1249-46db-a5f4-7644f17415f7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 125,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eec7010e-f9ca-46da-ba5c-3ebcbdfa11eb",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 57,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "66f4e719-1e4f-4c75-bb54-18217d7a39bc",
              "parentUUID": "eec7010e-f9ca-46da-ba5c-3ebcbdfa11eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 86,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "8269835d-61ee-4adb-b914-ad4cd3272de1",
              "parentUUID": "eec7010e-f9ca-46da-ba5c-3ebcbdfa11eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 88,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "14a26a62-034b-4ba2-8ee0-74aea96e825c",
              "parentUUID": "eec7010e-f9ca-46da-ba5c-3ebcbdfa11eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 71,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "60636dbf-ed14-488c-b4c0-fcabed1439d6",
              "parentUUID": "eec7010e-f9ca-46da-ba5c-3ebcbdfa11eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 85,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "e5d2a8fd-5af0-43c6-872a-e165a2a5f81a",
              "parentUUID": "eec7010e-f9ca-46da-ba5c-3ebcbdfa11eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "1d35c001-9590-4576-a763-48df119ed786",
              "parentUUID": "eec7010e-f9ca-46da-ba5c-3ebcbdfa11eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 75,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "38dd3dac-4d6e-4b92-b79b-873efa92dbab",
              "parentUUID": "eec7010e-f9ca-46da-ba5c-3ebcbdfa11eb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "66f4e719-1e4f-4c75-bb54-18217d7a39bc",
            "8269835d-61ee-4adb-b914-ad4cd3272de1",
            "14a26a62-034b-4ba2-8ee0-74aea96e825c",
            "60636dbf-ed14-488c-b4c0-fcabed1439d6",
            "e5d2a8fd-5af0-43c6-872a-e165a2a5f81a",
            "1d35c001-9590-4576-a763-48df119ed786",
            "38dd3dac-4d6e-4b92-b79b-873efa92dbab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 554,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "668f06b4-351c-4c43-9ebe-58ecf45e6452",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 89,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "806b2827-10ab-496e-9ac9-62b8beb300f4",
              "parentUUID": "668f06b4-351c-4c43-9ebe-58ecf45e6452",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "44bea032-e734-4b04-9718-b0a4c0661e34",
              "parentUUID": "668f06b4-351c-4c43-9ebe-58ecf45e6452",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "806b2827-10ab-496e-9ac9-62b8beb300f4",
            "44bea032-e734-4b04-9718-b0a4c0661e34"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 235,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a9840d3b-265f-4e8e-9a32-8d20787ba5b0",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 51,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "3e755357-2177-4a58-8952-540387d55473",
              "parentUUID": "a9840d3b-265f-4e8e-9a32-8d20787ba5b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "97d754e0-2735-4b04-a49b-a1c89da2f93f",
              "parentUUID": "a9840d3b-265f-4e8e-9a32-8d20787ba5b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "c3578ba5-3b94-400e-9a4a-de991adaf793",
              "parentUUID": "a9840d3b-265f-4e8e-9a32-8d20787ba5b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 53,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "7b6f0042-ad69-4b74-bd36-cb72b5946461",
              "parentUUID": "a9840d3b-265f-4e8e-9a32-8d20787ba5b0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3e755357-2177-4a58-8952-540387d55473",
            "97d754e0-2735-4b04-a49b-a1c89da2f93f",
            "c3578ba5-3b94-400e-9a4a-de991adaf793",
            "7b6f0042-ad69-4b74-bd36-cb72b5946461"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 307,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "846e2daf-ac95-4d1f-afe4-e6359ca70294",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 186,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "1259e7ef-a5ad-4ed0-9674-bf64c2a900bf",
              "parentUUID": "846e2daf-ac95-4d1f-afe4-e6359ca70294",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "ba50b684-33ec-4ff4-afe6-f2a46d7948e2",
              "parentUUID": "846e2daf-ac95-4d1f-afe4-e6359ca70294",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1259e7ef-a5ad-4ed0-9674-bf64c2a900bf",
            "ba50b684-33ec-4ff4-afe6-f2a46d7948e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 362,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8d37d727-6ca0-447b-bd74-7fa11a84ae2d",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 67,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "3458d4e9-7f98-4388-978e-b4d61677886f",
              "parentUUID": "8d37d727-6ca0-447b-bd74-7fa11a84ae2d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 53,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "752d3c22-29f9-4939-8842-4d7c9902880f",
              "parentUUID": "8d37d727-6ca0-447b-bd74-7fa11a84ae2d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3458d4e9-7f98-4388-978e-b4d61677886f",
            "752d3c22-29f9-4939-8842-4d7c9902880f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 120,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0ef76c20-077d-4264-911a-bb92d8c2cdd2",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 468,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "6ebe0e96-fbcb-4689-afbe-16f8a8f20e3d",
              "parentUUID": "0ef76c20-077d-4264-911a-bb92d8c2cdd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8647,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "c830a9bc-d95c-4631-99ce-dc9644a8ca5c",
              "parentUUID": "0ef76c20-077d-4264-911a-bb92d8c2cdd2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6ebe0e96-fbcb-4689-afbe-16f8a8f20e3d",
            "c830a9bc-d95c-4631-99ce-dc9644a8ca5c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9115,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cc61352b-03da-4947-b649-1370817fc55f",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "056316dc-c2fd-44bc-a909-10e70cc3886b",
              "parentUUID": "cc61352b-03da-4947-b649-1370817fc55f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8613,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "09b9c7ee-ccf3-4cb6-be46-6f94e6d87d62",
              "parentUUID": "cc61352b-03da-4947-b649-1370817fc55f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1256,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "de45434e-b1ed-443d-ac8e-8cd9f7e84466",
              "parentUUID": "cc61352b-03da-4947-b649-1370817fc55f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "056316dc-c2fd-44bc-a909-10e70cc3886b",
            "09b9c7ee-ccf3-4cb6-be46-6f94e6d87d62",
            "de45434e-b1ed-443d-ac8e-8cd9f7e84466"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11993,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e77f4000-ebee-4610-bcf0-8fb46ed80a95",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 66,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "51c19da7-432a-49e3-a98e-f859b3d7bab1",
              "parentUUID": "e77f4000-ebee-4610-bcf0-8fb46ed80a95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 69,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "d599dbab-a9d3-408d-85d4-267c61e9ed21",
              "parentUUID": "e77f4000-ebee-4610-bcf0-8fb46ed80a95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 44,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "5dec92a8-7273-4810-8ed4-ab4ca917a024",
              "parentUUID": "e77f4000-ebee-4610-bcf0-8fb46ed80a95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2305,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "cf82a899-9d8c-4c94-9281-d1d48df12582",
              "parentUUID": "e77f4000-ebee-4610-bcf0-8fb46ed80a95",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "51c19da7-432a-49e3-a98e-f859b3d7bab1",
            "d599dbab-a9d3-408d-85d4-267c61e9ed21",
            "5dec92a8-7273-4810-8ed4-ab4ca917a024",
            "cf82a899-9d8c-4c94-9281-d1d48df12582"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2484,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ce6e6959-f70e-4612-8f24-0829027a346e",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4263,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36293/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36293/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36293/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36293/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36293/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36293/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36293/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36293/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36293/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f327be77-5862-45c5-ad0e-c865f3a34c8f",
              "parentUUID": "ce6e6959-f70e-4612-8f24-0829027a346e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4232,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36293/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36293/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36293/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36293/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36293/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36293/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36293/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36293/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36293/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4caa0b90-79ab-40bc-8744-7a85df6c2161",
              "parentUUID": "ce6e6959-f70e-4612-8f24-0829027a346e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4208,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36293/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36293/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36293/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36293/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36293/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36293/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36293/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36293/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36293/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "58e0a871-d8bd-4194-9a7e-695a460b506f",
              "parentUUID": "ce6e6959-f70e-4612-8f24-0829027a346e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4155,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36293/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36293/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36293/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36293/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36293/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36293/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36293/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36293/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36293/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e2d52366-04de-4ddb-adff-376cc88b8d11",
              "parentUUID": "ce6e6959-f70e-4612-8f24-0829027a346e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4207,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36293/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36293/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36293/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36293/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36293/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36293/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36293/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36293/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36293/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d469c7c6-d519-4a11-9feb-97f8be79e4af",
              "parentUUID": "ce6e6959-f70e-4612-8f24-0829027a346e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4204,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36293/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36293/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36293/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36293/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36293/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36293/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36293/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36293/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36293/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "520ae0b7-fcef-4400-9727-c293580c1416",
              "parentUUID": "ce6e6959-f70e-4612-8f24-0829027a346e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4190,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36293/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36293/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36293/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36293/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36293/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36293/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36293/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36293/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36293/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ce068a9a-1f37-4b64-b929-b0d68b86d809",
              "parentUUID": "ce6e6959-f70e-4612-8f24-0829027a346e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4161,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36293/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36293/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36293/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36293/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36293/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36293/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36293/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36293/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36293/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c76d83cd-f3aa-4969-bc24-19e2230816f3",
              "parentUUID": "ce6e6959-f70e-4612-8f24-0829027a346e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4193,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36293/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36293/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36293/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36293/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36293/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36293/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36293/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36293/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36293/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e30d70d3-39b5-42d4-a283-6a7f88b26ba7",
              "parentUUID": "ce6e6959-f70e-4612-8f24-0829027a346e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f327be77-5862-45c5-ad0e-c865f3a34c8f",
            "4caa0b90-79ab-40bc-8744-7a85df6c2161",
            "58e0a871-d8bd-4194-9a7e-695a460b506f",
            "e2d52366-04de-4ddb-adff-376cc88b8d11",
            "d469c7c6-d519-4a11-9feb-97f8be79e4af",
            "520ae0b7-fcef-4400-9727-c293580c1416",
            "ce068a9a-1f37-4b64-b929-b0d68b86d809",
            "c76d83cd-f3aa-4969-bc24-19e2230816f3",
            "e30d70d3-39b5-42d4-a283-6a7f88b26ba7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 37813,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "25a17789-18da-4fbf-bec0-367819d196b9",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4221,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36293/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36293/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36293/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36293/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36293/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36293/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36293/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36293/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36293/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5b969cfa-5ee6-4974-a763-ab71bece0f81",
              "parentUUID": "25a17789-18da-4fbf-bec0-367819d196b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4207,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36293/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36293/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36293/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36293/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36293/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36293/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36293/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36293/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36293/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6162d39f-2967-4e14-9f2b-0d558856f646",
              "parentUUID": "25a17789-18da-4fbf-bec0-367819d196b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4214,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36293/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36293/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36293/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36293/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36293/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36293/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36293/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36293/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36293/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36293/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "92b12411-a23e-4613-a449-8b07a8be81ec",
              "parentUUID": "25a17789-18da-4fbf-bec0-367819d196b9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5b969cfa-5ee6-4974-a763-ab71bece0f81",
            "6162d39f-2967-4e14-9f2b-0d558856f646",
            "92b12411-a23e-4613-a449-8b07a8be81ec"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12642,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "891a5dd0-76dc-467a-95c0-b009ef09583f",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 250,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:36293/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:36293/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:36293/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:36293/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:36293/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:36293/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:36293/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:36293/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36293/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36293/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:36293/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36293/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "b31833c9-0d7c-43ca-b2aa-f0113f14bdb9",
              "parentUUID": "891a5dd0-76dc-467a-95c0-b009ef09583f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 222,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:36293/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:36293/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:36293/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:36293/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:36293/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:36293/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:36293/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:36293/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36293/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36293/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:36293/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36293/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36293/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "9de03d64-cbbc-44cc-900e-3dfb7d312d80",
              "parentUUID": "891a5dd0-76dc-467a-95c0-b009ef09583f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b31833c9-0d7c-43ca-b2aa-f0113f14bdb9",
            "9de03d64-cbbc-44cc-900e-3dfb7d312d80"
          ],
          "pending": [],
          "skipped": [],
          "duration": 472,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}